# coding: utf-8

"""
    QuePasa RAG SaaS API

    API for RAG retrieval, managing documents, files, and related operations including Telegram integration.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from quepasa.models.upsert_documents_request import UpsertDocumentsRequest

class TestUpsertDocumentsRequest(unittest.TestCase):
    """UpsertDocumentsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpsertDocumentsRequest:
        """Test UpsertDocumentsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpsertDocumentsRequest`
        """
        model = UpsertDocumentsRequest()
        if include_optional:
            return UpsertDocumentsRequest(
                domain = '',
                documents = [
                    quepasa.models.document.Document(
                        id = '', 
                        url = '', 
                        domain = '', 
                        text = '', 
                        html = '', 
                        markdown = '', 
                        pages = [
                            quepasa.models.document_pages_inner.Document_pages_inner(
                                text = '', 
                                language = '', )
                            ], 
                        language = '', 
                        title = '', 
                        keywords = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return UpsertDocumentsRequest(
                documents = [
                    quepasa.models.document.Document(
                        id = '', 
                        url = '', 
                        domain = '', 
                        text = '', 
                        html = '', 
                        markdown = '', 
                        pages = [
                            quepasa.models.document_pages_inner.Document_pages_inner(
                                text = '', 
                                language = '', )
                            ], 
                        language = '', 
                        title = '', 
                        keywords = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testUpsertDocumentsRequest(self):
        """Test UpsertDocumentsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
